spring:
  application:
    name: mall-buyer #服务器名称
  profiles:
    active: dev  # 本机开发环境
  main:
    allow-circular-references: true # 允许循环依赖
  data: #reids配置
    redis:
      host: ${tiktok.redis.host}
      port: ${tiktok.redis.port}
      password: ${tiktok.redis.password}
      database: ${tiktok.redis.database}

server:
  port: ${tiktok.server.port} # tomcat启动端口号

dubbo: #dubbo配置
  consumer:
    check: true # 启动时检查提供者是否存在，true报错，false忽略
  registry:
    address: ${tiktok.dubbo.registry.address} # 注册中心zookeeper配置（默认2181端口）
    group: tiktok_mall_service # 设置zookeeper的根节点，不配置将使用默认的根节点
    enable-empty-protection: false #关闭推空保护
  application: # 解决qos-server启动报错， qos是Dubbo的在线运维命令，可以对服务进行动态的配置、控制及查询
#    qos-enable: true
#    qos-port: 33333
#    qos-accept-foreign-ip: false
    serialize-check-status: WARN

# 日志配置
logging:
  level:
    com:
      tiktok:
        mapper: debug
        service: info
        controller: info

tiktok:
  jwt:
    # 设置jwt签名加密时使用的秘钥
    user-secret-key: tiktok
    # 设置jwt过期时间(20小时) 20h * 60min * 60s = 72000000ms
    user-ttl: 72000000
    # 设置前端传递过来的令牌名称
    user-token-name: token

# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    #自定义swagger前端请求路径,输入http:localhost:8080/swagger-ui.html会自动重定向到swagger页面
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs    #swagger后端请求地址
    enabled: true   #是否开启文档功能
  group-configs:
    - group: '接口'   #分组名称
      paths-to-match: '/**'   #配置需要匹配的路径,默认为/**
      packages-to-scan: com.tiktok.controller    #配置要扫描包的路径,一般配置到启动类所在的包名

# knife4j的增强配置，不需要增强可以不配(建议配置一下)
knife4j:
  enable: true    #开启knife4j,无需添加@EnableKnife4j注解
  setting:
    language: zh_cn   #中文
    swagger-model-name: 实体类列表   #重命名SwaggerModel名称,默认

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  # token-name: token就可以达到类似于jwt的效果，在你的header加上token:token值，就可以达到登录的校验的效果，像jwt一样，完全抛弃了cookie和session
  token-name: token
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 1800
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # 是否尝试从 cookie 里读取 Token，此值为 false 后，StpUtil.login(id) 登录时也不会再往前端注入Cookie
  isReadCookie: false

